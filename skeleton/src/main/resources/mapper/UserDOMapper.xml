<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.sinjinsong.skeleton.dao.user.UserDOMapper">
    <resultMap id="BaseResultMap" type="cn.sinjinsong.skeleton.domain.entity.user.UserDO">
        <id column="id" property="id"/>
        <result column="username" property="username"/>
        <result column="nickname" property="nickname"/>
        <result column="real_name" property="realName"/>
        <result column="birthday" property="birthday"/>
        <result column="email" property="email"/>
        <result column="phone" property="phone"/>
        <result column="user_status" property="userStatus" javaType="cn.sinjinsong.skeleton.enumeration.user.UserStatus"/>
        <result column="sex" property="sex"/>
        <result column="birthday" property="birthday"/>
        <result column="reg_time" property="regTime"/>
        <result column="avatar" property="avatar"/>
        <collection property="roles" column="id" select="cn.sinjinsong.skeleton.dao.user.RoleDOMapper.findByUserId"/>
    </resultMap>
    
    <resultMap id="BriefResultMap" type="cn.sinjinsong.skeleton.domain.entity.user.UserDO">
        <id column="id" property="id"/>
        <result column="username" property="username"/>
        <result column="nickname" property="nickname"/>
        <result column="sex" property="sex"/>
        <result column="birthday" property="birthday"/>
        <result column="reg_time" property="regTime"/>
        <result column="avatar" property="avatar"/>
    </resultMap>

    <sql id="Base_Column_List">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        id, username, password, nickname, real_name, sex, birthday, reg_time, email, phone,
        user_status,avatar
    </sql>

    <sql id="Brief_Column_List">
        id, username, nickname, sex, birthday, reg_time,avatar
    </sql>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select
        <include refid="Base_Column_List"/>
        from user
        where id = #{id}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        delete from user
        where id = #{id,jdbcType=BIGINT}
    </delete>

    <insert id="insert" parameterType="cn.sinjinsong.skeleton.domain.entity.user.UserDO" useGeneratedKeys="true"
            keyProperty="id">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        insert into user (id, username, password,
        nickname, real_name, sex,
        birthday, reg_time, email,
        phone,user_status,avatar)
        values (#{id,jdbcType=BIGINT}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
        #{nickname,jdbcType=VARCHAR}, #{realName,jdbcType=VARCHAR}, #{sex,jdbcType=CHAR},
        #{birthday,jdbcType=DATE}, #{regTime,jdbcType=TIMESTAMP}, #{email,jdbcType=VARCHAR},
        #{phone,jdbcType=VARCHAR},
        #{userStatus,jdbcType=SMALLINT},#{avatar,jdbcType=VARCHAR})
    </insert>


    <update id="updateByPrimaryKeySelective" parameterType="cn.sinjinsong.skeleton.domain.entity.user.UserDO">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update user
        <set>
            <if test="username != null">
                username = #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="nickname != null">
                nickname = #{nickname,jdbcType=VARCHAR},
            </if>
            <if test="realName != null">
                real_name = #{realName,jdbcType=VARCHAR},
            </if>
            <if test="sex != null">
                sex = #{sex,jdbcType=CHAR},
            </if>
            <if test="birthday != null">
                birthday = #{birthday,jdbcType=DATE},
            </if>
            <if test="regTime != null">
                reg_time = #{regTime,jdbcType=TIMESTAMP},
            </if>
            <if test="email != null">
                email = #{email,jdbcType=VARCHAR},
            </if>
            <if test="phone != null">
                phone = #{phone,jdbcType=VARCHAR},
            </if>
            <if test="userStatus != null">
                user_status = #{userStatus,jdbcType=BIGINT},
            </if>
            <if test="avatar != null">
                avatar = #{avatar,jdbcType=BIGINT},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>

    <update id="updateByPrimaryKey" parameterType="cn.sinjinsong.skeleton.domain.entity.user.UserDO">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update user
        set username = #{username,jdbcType=VARCHAR},
        password = #{password,jdbcType=VARCHAR},
        nickname = #{nickname,jdbcType=VARCHAR},
        real_name = #{realName,jdbcType=VARCHAR},
        sex = #{sex,jdbcType=CHAR},
        birthday = #{birthday,jdbcType=DATE},
        reg_time = #{regTime,jdbcType=TIMESTAMP},
        email = #{email,jdbcType=VARCHAR},
        phone = #{phone,jdbcType=VARCHAR},
        user_status = #{userStatus,jdbcType=BIGINT},
        avatar = #{avatar,jdbcType=BIGINT},
        where id = #{id,jdbcType=BIGINT}
    </update>

    <select id="findByUsername" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from user
        where username = #{username}
    </select>

    <select id="findByPhone" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from user
        where phone = #{phone}
    </select>

    <select id="findByEmail" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from user
        where email = #{email}
    </select>

    <select id="findAll" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from user
    </select>

    <select id="findAvatarById" resultType="string">
        select 
        avatar
        from user
        where id = #{id}
    </select>

    <select id="findBriefInfoById" resultMap="BriefResultMap">
        select
        <include refid="Brief_Column_List"/>
        from user
        where id = #{id}
    </select>

    <select id="findAllUserIds" resultType="long">
        select user
        from user_role 
        where role in 
        (select id from role where role_name = 'role_user')
    </select>
</mapper>