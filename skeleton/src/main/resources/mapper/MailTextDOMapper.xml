<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.sinjinsong.skeleton.dao.mail.MailTextDOMapper" >
  <resultMap id="BaseResultMap" type="cn.sinjinsong.skeleton.domain.entity.mail.MailTextDO" >
    <constructor >
      <idArg column="id" jdbcType="BIGINT" javaType="java.lang.Long" />
      <arg column="send_time" jdbcType="TIMESTAMP" javaType="java.time.LocalDateTime" />
    </constructor>
  </resultMap>
    
  <resultMap id="ResultMapWithBLOBs" type="cn.sinjinsong.skeleton.domain.entity.mail.MailTextDO" >
    <constructor >
      <idArg column="id" jdbcType="BIGINT" javaType="java.lang.Long" />
      <arg column="send_time" jdbcType="TIMESTAMP" javaType="java.time.LocalDateTime" />
      <arg column="mail_text" jdbcType="LONGVARCHAR" javaType="java.lang.String" />
    </constructor>
  </resultMap>
    
  <sql id="Base_Column_List" >
    id, send_time
  </sql>
  <sql id="Blob_Column_List" >
    mail_text
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from mail_text
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from mail_text
    where id = #{id,jdbcType=BIGINT}
  </delete>
    
  <insert id="insert" parameterType="cn.sinjinsong.skeleton.domain.entity.mail.MailTextDO" useGeneratedKeys="true" keyProperty="id">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into mail_text (id, send_time, mail_text
      )
    values (#{id,jdbcType=BIGINT}, #{sendTime,jdbcType=TIMESTAMP}, #{mailText,jdbcType=LONGVARCHAR}
      )
  </insert>
    
  <insert id="insertSelective" parameterType="cn.sinjinsong.skeleton.domain.entity.mail.MailTextDO" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into mail_text
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="sendTime != null" >
        send_time,
      </if>
      <if test="mailText != null" >
        mail_text,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="sendTime != null" >
        #{sendTime,jdbcType=TIMESTAMP},
      </if>
      <if test="mailText != null" >
        #{mailText,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.sinjinsong.skeleton.domain.entity.mail.MailTextDO" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update mail_text
    <set >
      <if test="sendTime != null" >
        send_time = #{sendTime,jdbcType=TIMESTAMP},
      </if>
      <if test="mailText != null" >
        mail_text = #{mailText,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="cn.sinjinsong.skeleton.domain.entity.mail.MailTextDO" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update mail_text
    set send_time = #{sendTime,jdbcType=TIMESTAMP},
      mail_text = #{mailText,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.sinjinsong.skeleton.domain.entity.mail.MailTextDO" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update mail_text
    set send_time = #{sendTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>